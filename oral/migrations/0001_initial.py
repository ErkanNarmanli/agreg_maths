# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-12-01 16:13
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Development',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('content', models.TextField(blank=True, verbose_name='Contenu du developpement')),
                ('document', models.FileField(blank=True, upload_to='dev/')),
            ],
            options={
                'verbose_name': 'développement',
                'verbose_name_plural': 'développements',
            },
        ),
        migrations.CreateModel(
            name='EffectiveDevelopment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(verbose_name='Remarques personnelles concernant le développement.')),
                ('development', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='effectiveUses', to='oral.Development')),
            ],
            options={
                'verbose_name': 'affectation de développement',
                'verbose_name_plural': 'affectation de développement',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, verbose_name='Contenu de la leçon')),
                ('remarks', models.TextField(blank=True, verbose_name='Mes remarques')),
                ('is_finished', models.BooleanField(verbose_name='Leçon terminée')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'leçon',
                'verbose_name_plural': 'leçons',
            },
        ),
        migrations.CreateModel(
            name='LessonTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.PositiveSmallIntegerField(verbose_name='Numéro de la leçon')),
                ('title', models.CharField(max_length=200, verbose_name='Nom de la leçon')),
                ('category', models.CharField(choices=[('algebre', 'Algèbre et géométrie'), ('analyse', 'Analyse et probabilités'), ('informatique', 'Informatique')], max_length=200, verbose_name='Catégorie')),
                ('is_for_info', models.BooleanField(help_text="Cocher la case si la leçon fait partie des leçons sur lesquel peuvent être interrogés les agrégation de l'option info. Cela concerne donc toutes les leçons d'informatique  mais aussi certaines leçons d'algèbre et d'analyse.", verbose_name='Pour option info')),
                ('jury', models.TextField(blank=True, verbose_name='Rapport du Jury')),
                ('year', models.PositiveSmallIntegerField(default=2017, help_text='Année pendant laquelle est passée le concours. Par exemple en 2016-2017 mettre : 2017', validators=[django.core.validators.MaxValueValidator(2042), django.core.validators.MinValueValidator(2005)], verbose_name='Année')),
            ],
            options={
                'verbose_name': 'template de leçon',
                'verbose_name_plural': 'templates de leçons',
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('slug', models.SlugField(primary_key=True, serialize=False, unique=True, verbose_name='Identificateur')),
                ('author', models.CharField(max_length=200, verbose_name='Auteur')),
                ('year', models.PositiveSmallIntegerField(blank=True, verbose_name='Année de publication')),
                ('document', models.FileField(blank=True, upload_to='ref/')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'référence',
                'verbose_name_plural': 'références',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='references',
            field=models.ManyToManyField(blank=True, related_name='lessons', to='oral.Reference'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='effective_lessons', to='oral.LessonTemplate'),
        ),
        migrations.AddField(
            model_name='effectivedevelopment',
            name='lessons',
            field=models.ManyToManyField(blank=True, help_text='Ajouter ici toutes les leçons auxquelles ce developpment sera présenté.', related_name='allDevs', to='oral.LessonTemplate'),
        ),
        migrations.AddField(
            model_name='effectivedevelopment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='development',
            name='references',
            field=models.ManyToManyField(blank=True, related_name='developments', to='oral.Reference'),
        ),
    ]
